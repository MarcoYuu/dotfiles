

"-------------------------------------------------------------------------------"
" Mapping
"-------------------------------------------------------------------------------"
" コマンド       ノーマルモード 挿入モード コマンドラインモード ビジュアルモード
" map  / noremap         @            -              -                  @
" nmap / nnoremap        @            -              -	                -
" imap / inoremap        -            @              -                  -
" cmap / cnoremap        -            -              @                  -
" vmap / vnoremap        -            -              -                  @
" map! / noremap!        -            @              @                  -
"-------------------------------------------------------------------------------"


" 行移動を見た目上に行うようにしています。wrap指定している場合、
" 見た目上は数行に改行されていても内部的には1行なので。
nnoremap h      <Left>
nnoremap l      <Right>
noremap  j      gj
noremap  k      gk
nnoremap <Down> gj
nnoremap <Up>   gk

" 検索結果に移動したとき、その位置を画面の中央にします。
nnoremap n  nzz
nnoremap N  Nzz
nnoremap *  *zz
nnoremap #  #zz
nnoremap g* g*zz
nnoremap g# g#zz

" 挿入モードでのカーソル移動
inoremap <C-j> <Down>
inoremap <C-k> <Up>
inoremap <C-h> <Left>
inoremap <C-l> <Right>

" ファイラーを起動
nnoremap <silent><C-x><C-f> :VimFiler<CR>

" 前のバッファ、次のバッファ、バッファの削除、バッファのリスト
nnoremap <silent><S-b> :bp<CR>
nnoremap <silent><S-n> :bn<CR>
nnoremap <silent><S-k> :bd<CR>
nnoremap <silent><S-l> :Bufferlist<CR>

" CTRL-hjklでウィンドウ移動
nnoremap <S-j> <C-w>j
nnoremap <S-k> <C-w>k
nnoremap <S-l> <C-w>l
nnoremap <S-h> <C-w>h

" 一行追加
nnoremap <silent><C-o> o<ESC>

" アウトラインを表示
nnoremap <silent><Leader>t :Unite -vertical -winwidth=30 -no-quit outline<CR>

" ツリーをトグル 
nmap <Leader>n :NERDTreeToggle<CR>

" Ctrl s で保存などWindows系キーバインド(.bashrcなんかで$stty -ixon　-ixoffが必要)
nnoremap <C-s> <ESC>:w<CR>
inoremap <C-s> <ESC><ESC>:w<CR>i
nnoremap <C-q> <ESC>:q!<CR>
inoremap <C-q> <ESC>:q!<CR>


" Spaceでページ送り
nnoremap <Space> <C-f>

" ノーマルモードエンターで改行挿入
nnoremap <CR> i<CR><ESC>^^
" ノーマルモードBSで削除
nnoremap  i<ESC>l

" Doxygenコメントの追加
nnoremap <C-d><C-x> :Dox<CR>

" 連番入力
" ノーマルモードで連番に置換したい数字の上で3coとかで3行文連番になる
" ビジュアルモード選択後だと選択行が連番に
nnoremap <silent> co :ContinuousNumber <C-a><CR>
vnoremap <silent> co :ContinuousNumber <C-a><CR>
command! -count -nargs=1 ContinuousNumber let c = col('.')|for n in range(1, <count>?<count>-line('.'):1)|exec 'normal! j' . n . <q-args>|call cursor('.', c)|endfor

" バッファを閉じる
nnoremap <Leader>xx :bdelete<CR>


" TabPageの設定
" Anywhere SID.
function! s:SID_PREFIX()
	return matchstr(expand('<sfile>'), '<SNR>\d\+_\zeSID_PREFIX$')
endfunction

" Set tabline.
function! s:my_tabline()  "{{{
	let s = ''
	for i in range(1, tabpagenr('$'))
		let bufnrs = tabpagebuflist(i)
		let bufnr = bufnrs[tabpagewinnr(i) - 1]  " first window, first appears
		let no = i  " display 0-origin tabpagenr.
		let mod = getbufvar(bufnr, '&modified') ? '!' : ' '
		let title = fnamemodify(bufname(bufnr), ':t')
		let title = '[' . title . ']'
		let s .= '%'.i.'T'
		let s .= '%#' . (i == tabpagenr() ? 'TabLineSel' : 'TabLine') . '#'
		let s .= no . ':' . title
		let s .= mod
		let s .= '%#TabLineFill# '
	endfor
	let s .= '%#TabLineFill#%T%=%#TabLine#'
	return s
endfunction "}}}
let &tabline = '%!'. s:SID_PREFIX() . 'my_tabline()'
set showtabline=2 " 常にタブラインを表示

" The prefix key.
nnoremap    [Tag]   <Nop>
nmap    t [Tag]
" Tab jump
for n in range(1, 9)
	execute 'nnoremap <silent> [Tag]'.n  ':<C-u>tabnext'.n.'<CR>'
endfor
" t1 で1番左のタブ、t2 で1番左から2番目のタブにジャンプ

" tc 新しいタブを一番右に作る
map <silent> [Tag]c :tablast <bar> tabnew<CR>
" tx タブを閉じる
map <silent> [Tag]x :tabclose<CR>
" tn 次のタブ
map <silent> [Tag]n :tabnext<CR>
" tp 前のタブ
map <silent> [Tag]p :tabprevious<CR>

" UNDO履歴表示
nmap U :<C-u>GundoToggle<CR>

"Escの2回押しでハイライト消去
nmap <ESC><ESC> :nohlsearch<CR><ESC>

" Ctrl-iでヘルプ
nnoremap <C-i>  :<C-u>help<Space>
" カーソル下のキーワードをヘルプでひく
nnoremap <C-i><C-i> :<C-u>help<Space><C-r><C-w><CR>
