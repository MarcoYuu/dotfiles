scriptencoding utf-8

"-------------------------------------------------------------------------------"
" Mapping
"-------------------------------------------------------------------------------"
" コマンド		 ノーマルモード 挿入モード コマンドラインモード ビジュアルモード
" map  / noremap		 @			  -				 -					@
" nmap / nnoremap		 @			  -				 -					-
" imap / inoremap		 -			  @				 -					-
" cmap / cnoremap		 -			  -				 @					-
" vmap / vnoremap		 -			  -				 -					@
" map! / noremap!		 -			  @				 @					-
"-------------------------------------------------------------------------------"

" 標準 "{{{

nnoremap Y y$

" カーソル移動 "{{{
" 行移動を見た目上に行うようにしています。wrap指定している場合、
" 見た目上は数行に改行されていても内部的には1行なので。
nnoremap h		<Left>
nnoremap l		<Right>zo
noremap  j		gj
noremap  k		gk
nnoremap <Down> gj
nnoremap <Up>	gk
"}}}

" 検索結果に移動したとき、その位置を画面の中央にします。
nnoremap n	nzz
nnoremap N	Nzz
nnoremap *	*zz
nnoremap #	#zz
nnoremap g* g*zz
nnoremap g# g#zz

" 前のバッファ、次のバッファ
nnoremap <silent><S-b> :bp<CR>
nnoremap <silent><S-n> :bn<CR>
" バッファを閉じる
nnoremap <Leader>xx :bdelete<CR>
" Shift-hjklでウィンドウ移動
nnoremap <S-j> <C-w>j
nnoremap <S-k> <C-w>k
nnoremap <S-l> <C-w>l
nnoremap <S-h> <C-w>h

" 差分移動
if &diff
	nnoremap <C-j> ]c
	nnoremap <C-k> [c
	nnoremap <C-h> do
	nnoremap <C-l> dp
end

" Quickfix移動
nnoremap [q :cprevious<CR>   " 前へ
nnoremap ]q :cnext<CR>       " 次へ
nnoremap [Q :<C-u>cfirst<CR> " 最初へ
nnoremap ]Q :<C-u>clast<CR>  " 最後へ

" 強制mozcさん起動
nnoremap <Leader>j :MozcOn<CR>
inoremap <Leader>j <Esc>:MozcOn<CR>i

" 一行追加
nnoremap <silent><C-o> o<ESC>

" Ctrl s で保存などWindows系キーバインド(.bashrcなんかで$stty -ixon -ixoffが必要)
nnoremap <silent><C-s> <ESC>:w<CR>
inoremap <silent><C-s> <ESC><ESC>:w<CR>i
nnoremap <silent><C-q> <ESC>:q!<CR>
inoremap <silent><C-q> <ESC>:q!<CR>

" Spaceでページ送り
nnoremap <C-p> 30k
nnoremap <Space> 30j

" ノーマルモードエンターで改行挿入
nnoremap <CR> i<CR><ESC>^^
" ノーマルモードBSで削除
nnoremap  i<ESC>l

" Escの2回押しでハイライト消去
nmap <silent><ESC><ESC> :nohlsearch<CR>:HierClear<CR><ESC>

" カーソル下のキーワードをヘルプでひく
nnoremap <C-i><C-i> :<C-u>help<Space><C-r><C-w><CR>

" tagsジャンプの時に複数ある時は一覧表示
nnoremap <C-]> g<C-]>

" 連番入力
" ノーマルモードで連番に置換したい数字の上で3coとかで3行文連番になる
" ビジュアルモード選択後だと選択行が連番に
nnoremap <silent> co :ContinuousNumber <C-a><CR>
vnoremap <silent> co :ContinuousNumber <C-a><CR>
command! -count -nargs=1 ContinuousNumber let c = col('.')|
			\ for n in range(1, <count>?<count>-line('.'):1)|
			\ exec 'normal! j' . n . <q-args>|call cursor('.', c)|endfor

nnoremap Y y$
"}}}

" タブ "{{{
" The prefix key.
nnoremap [Tab] <Nop>
nmap t [Tab]

" t1 で1番左のタブ、t2 で1番左から2番目のタブにジャンプ
for n in range(1, 9)
	execute 'nnoremap <silent> [Tab]'.n  ':<C-u>tabnext'.n.'<CR>'
endfor

" tc 新しいタブを一番右に作る
map <silent> [Tab]c :tablast <bar> tabnew<CR>
" tx タブを閉じる
map <silent> [Tab]x :tabclose<CR>
" tn 次のタブ
map <silent> [Tab]n :tabnext<CR>
" tp 前のタブ
map <silent> [Tab]p :tabprevious<CR>
"}}}

" pyclewn.vim {{{
cnoremap <expr> <SID>lineno line(".")

" カーソル行にブレイクポイント設定/取消
nnoremap <script> <C-b> :Cbreak <C-R><C-%>:<SID>lineno<CR>
nnoremap <script> <C-c> :Cclear <C-R><C-%>:<SID>lineno<CR>

" finish current loop
nnoremap <F4> :Cuntil<CR>
" step in
nnoremap <F5> :Cstep<CR>
" step out
nnoremap <F6> :Cnext<CR>
" finish current function
nnoremap <F7> :Cfinish<CR>
" continue next break point
nnoremap <F8> :Ccontinue<CR>
" breaking main and run
nnoremap <F9> :Cbreak main <Bar> Crun<CR>
" up stack trace
nnoremap <F10> :Cup<CR>
" down stack trace
nnoremap <F11> :Cdown<CR>
" run
nnoremap <F12> :Crun<CR>

" カーソル位置の変数の値表示
nnoremap PP :Cprint <C-R><C-W><CR>

" カーソル位置の変数をwatch変数バッファに追加
nnoremap WW :Cdbgvar <C-R><C-W><CR>
" watch変数バッファのカーソル位置の情報を削除
nnoremap WD :Cdelvar <C-R><C-W><CR>
" watch変数バッファのカーソル行の折り畳みを開く/閉じる
nnoremap <script> WZ :Cfoldvar <SID>lineno<CR>

" }}}
